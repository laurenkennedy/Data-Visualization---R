---
title: "L02 ggplot 1"
subtitle: "Data Visualization (STAT 302)" 
author: "Lauren Kennedy"
pagetitle: "L02 Lauren Kennedy"

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false

from: markdown+emoji
reference-location: margin
citation-location: margin
---

## Goals

1.  use additional color, shape, size, transparency aesthetics
2.  recognize a variety of different geom layers
3.  set x and y limits
4.  read documentation and access help files
5.  read in .rda and .txt files
6.  use proper organization


## Datasets

For this activity we will be using the `blue_jays`, `BA_degrees`, `dow_jones_industrial` and `cdc` data set that should be located in your `/data` subdirectory. An explanation of the variables in the data set are provided below in their respective Exercises.

```{r}
#| label: load-packages

# Load package(s)
library("tidyverse")
library("lubridate")
library(splines)

# Load data
load("data/blue_jays.rda")
load("data/BA_degrees.rda")
load("data/dow_jones_industrial.rda")
#need different methods to load .txt file 
cdc <- read_delim(file = "data/cdc.txt", delim = "|") %>%
  mutate(genhlth = factor(genhlth,
                          levels = c("excellent",
                                     "very good",
                                     "good",
                                     "fair",
                                     "poor")))

```

## Exercise 1

We'll be using data from the `blue_jays.rda` dataset to answer the following questions and construct the following plots.

Below is a description of the variables contained in the dataset.

-   `BirdID` - ID tag for bird
-   `KnownSex` - Sex coded as F or M
-   `BillDepth` - Thickness of the bill measured at the nostril (in mm)
-   `BillWidth` - Width of the bill (in mm)
-   `BillLength` - Length of the bill (in mm)
-   `Head` - Distance from tip of bill to back of head (in mm)
-   `Mass` - Body mass (in grams)
-   `Skull` - Distance from base of bill to back of skull (in mm)
-   `Sex` - Sex coded as `0 = female` or `1 = male`

<br>

### Question 1.1

Three commonly used aesthetics for enhancing a graphic are color, size, and shape. We can either map variables or fixed values to these.

In the `blue_jays` dataset which variables would be appropriate to map to the `size` aesthetic? The `shape` aesthetic? The `color` aesthetic?

::: {.callout-tip icon="false"}
## Solution 

For the 'size' aesthetic, we want a continuous variable. These include BillDepth, BillWidth, BillLength, Head, Mass, and Skull because they can take any value.

For the 'shape' aesthetic, we want a discrete variable. KnownSex is a discrete variable, taking values of female/ male. If Sex was coded properly, it would also be discrete and be a good option for the 'shape' aesthetic. 

For the 'color' aesthetic, we could do either a continuous or discrete variable. If it is continuous, it could be a gradient. For example, if we mapped BillDepth, BillWidth, BillLength, head, Mass, or Skull there would be a gradient of values that spanned the ranges.If we mapped the discrete variable of KnownSex, there would be one color for male and a different color for female.

:::

### Plot 1

Construct a scatterplots of `Head` by `Mass` with the following criteria:

-   `color` aesthetic set to Northwestern purple (`#4E2A84`)
-   `shape` aesthetic set a solid/filled triangle
-   `size` aesthetic set to 2.

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: plot1

ggplot(data=blue_jays, mapping = aes(x = Mass, y = Head)) +
  geom_point(color = "#4E2A84",
             size = 2,
             shape = 17) +
  labs(
    x="Mass (grams)",
    y= "Head distance (mm)",
    title="Head Distance by Mass of Bluejays"
  )
#Note: color is NOT in aesthetics, ggplot would think we're assigning variable to the color
```
:::

### Plot 2

Construct a scatterplot of `Head` by `Mass` with the following criteria:

-   `size` aesthetic to 2.
-   Either `Sex` or `KnownSex` mapped to the `color` aesthetic.

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: plot2
ggplot(blue_jays, aes(x = Mass, y = Head)) +
  geom_point(aes(color = KnownSex),
             size = 2) +
  labs(
    x="Mass (grams)",
    y= "Head distance ( mm)",
    title="Head Distance by Mass of Bluejays"
  )


```
:::

### Question 1.2

Was it more appropriate to map `Sex` or `KnownSex` to the `color` aesthetic in Plot 2 and why?

::: {.callout-tip icon="false"}
## Solution

It was more appropriate to map 'KnownSex' because the data is read as a discrete variable, either taking a value of F or M. 'Sex' is interpreted as a continuous variable because its values are 0 or 1, so ggplot attempts to create a gradient instead of treating the data as discrete. This can be confusing to the viewer.

:::

### Question 1.3

Consider the `color` aesthetic in Plot 1 and Plot 2 above. **Explain why** these two usages of the `color` aesthetic are meaningfully different.

::: {.callout-tip icon="false"}
## Solution

In Plot 1, we are mapping the color aesthetic to a fixed value. All points will be the same, regardless of any underlying characteristics. Hence, aes is not used in front of the color command.

In Plot 2, we are mapping color to a variable. The color aesthetic is mapped to KnownSex, so each point is colored according to its category (male or female). For a data point, it is clear to see whether it is male or female. As a result, aes is used because we are mapping the color to a variable. 



:::

## Exercise 2

We'll be using data from the `BA_degrees.rda` which is already in the `/data` subdirectory in our **data_vis_labs** project. Below is a description of the variables contained in the dataset.

`BA_degrees.rda`

-   `field` - field of study
-   `year_str` - academic year (e.g. 1970-71)
-   `year` - closing year of academic year
-   `count` - number of degrees conferred within a field for the year
-   `perc` - field's percentage of degrees conferred for the year

```{r}
#| label: ex-2-data-wrangle

# Wrangling for plotting
ba_data <- BA_degrees %>%
  # mean % per field
  group_by(field) %>%
  mutate(mean_perc = mean(perc)) %>%
  # Only fields with mean >= 5%
  filter(mean_perc >= 0.05) %>%
  # Organizing for plotting
  arrange(desc(mean_perc), year) %>%
  ungroup() %>%
  mutate(field = fct_inorder(field))
```

<br>

Using the `ba_data` dataset derived from `BA_degrees`, recreate the following graphics as precisely as possible.

### Plot 1

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-2-data-plot1
ggplot(ba_data, aes(x=year, y=perc))+
  geom_line()+
  facet_wrap(~field, ncol = 3) +
  labs(x="Year", 
       y="Proportion of degrees")

```
:::

### Plot 2

*Hints:*

-   Transparency is 0.5
-   Color used is`"red"`

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-2-data-plot2
ggplot(ba_data, aes(x=year, y=perc))+
  geom_line(color = "red")+
  facet_wrap(~field) +
  geom_area(fill = "red", alpha = 0.5)+
  labs(x="Year", y="Proportion of degrees")

```
:::

### Plot 3

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-2-data-plot3
ggplot(ba_data, aes(x=year, y=perc))+
  geom_line(aes(color = field)) +
  labs(x="Year", y="Proportion of degrees")

```
:::

## Exercise 3

Using the `dow_jones_industrial` dataset, track the Dow Jones Industrial Average at close each day during 2009. Recreate the following graphics as precisely as possible.

```{r}
#| label: ex-3-data-wrangle

# Only keep observations within 2009 range
djia_date_range <- dow_jones_industrial %>%
  filter(
    date >= ymd("2009/01/01") & date < ymd("2010/01/01")
    )
```


:::

### Plot 1

It will be easier to see the trend if we add a smooth fit line to the graph.

*Hints:*

-   colors: "purple", "red", "green"
-   Wiggliness for `loess` is 0.3

::: {.callout-tip icon="false"}
## Solution
```{r}
#| label: ex-3-data-plot

ggplot(djia_date_range, aes(x=date, y=close)) +
  geom_line(color="purple")+
  geom_smooth(span = 0.3, color = "green",
              se = TRUE, fill = "red") +
  xlab(NULL)+
  labs(y="Dow Jones Industrial Average",
       title = "Average Closing Price Each Day in 2009")
```
:::

### Plot 2

There are many different smoothing methods in statistics. By default `geom_smooth()` uses `loess`.

Another extremely popular smoothing method in statistics is the use of splines. A spline function is a curve constructed from polynomial segments that are subject to conditions or continuity at their joints. Generally, a difficulty is you need to determine the number of `knots`, however this method is popular in predictive models.

Add a natural cubic spline smoother with `df = 6`.

*Hints:*

-   need the `splines` package
-   use method `"lm"`
-   `y ~ ns(x, 6)`

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-3-data-plot2

ggplot(djia_date_range, aes(x=date, y=close)) +
  geom_line()+
  geom_smooth(method="lm",
              formula = y ~ ns(x,6), 
              se = FALSE) +
  xlab(NULL)+
  labs(y="Dow Jones Industrial Average",
       title = "Average Closing Price Each Day in 2009")

```
:::

## Exercise 4

We'll be using the BRFSS (Behavioral Risk Factor Surveillance System) survey collected annually by the Centers for Disease Control and Prevention (CDC). The data can be found in the provided `cdc.txt` file --- place this file in your `/data` subdirectory. The dataset contains 20,000 complete observations/records of 9 variables/fields, described below.

-   `genhlth` - How would you rate your general health? (excellent, very good, good, fair, poor)
-   `exerany` - Have you exercised in the past month? (`1 = yes`, `0 = no`)
-   `hlthplan` - Do you have some form of health coverage? (`1 = yes`, `0 = no`)
-   `smoke100` - Have you smoked at least 100 cigarettes in your life time? (`1 = yes`, `0 = no`)
-   `height` - height in inches
-   `weight` - weight in pounds
-   `wtdesire` - weight desired in pounds
-   `age` - in years
-   `gender` - `m` for males and `f` for females

<br>

Using the `cdc` dataset, we want to visualize the **distribution** between weight and gender based on general health. Recreate the Plot 1 and Plot 2 which represent 2 attempts at this.

<br>

### Plot 1

*Hints:*

-   Transparency is 0.2
-   Horizontal axis should have lower limit of 50 and upper limit of 400

::: {.callout-tip icon="false"}
## Solution
```{r}
#| label: ex-4-plot1

ggplot(cdc, aes(weight))+
         geom_density(aes(color=genhlth, fill = genhlth), alpha=0.2)+
  facet_wrap(~ gender)+
  xlim(c(50,400))
  
         

```

:::

### Plot 2

*Hints:*

-   Transparency is 0.4

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-4-plot2

ggplot(cdc, aes(gender,weight))+
  geom_boxplot(aes(fill = gender), alpha = 0.4) +
  facet_wrap(~genhlth,nrow = 1)
  
         

```
:::

### Plot 3

Choose one more way to visualize the **distribution** of weight based on gender and general health. (Many ways to do this).

*Requirements:*

-   The geom layer cannot be geom_boxplot() or geom_density()
-   Appropriately label the x- and y- axis
-   Add a title

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-4-plot3

ggplot(cdc, aes(weight))+
  geom_histogram(aes(color=genhlth, fill = genhlth), alpha=0.5)+
  facet_wrap(~ gender) +
  xlim(c(50,400)) +
  labs(
    x = "Weight",
    y = "Count",
    title = "How Weight Varies by Gender and General Health"
  )
  
         

```

:::

### Question 4.1

Compare and contrast the different ways to visualize a distribution. In other words, when might you use a histogram vs density vs boxplot? Which did you find the most useful in interpreting the plots above?

::: {.callout-tip icon="false"}
## Solution

Histograms and density plots are intuitive and show the distribution of a continuous variable, like weight in this example. Both help visualize the shape of the distribution and its peaks. One problem with histograms is that the choice of bin width can greatly affect the appearance. Density plots avoid the arbitrary choice of bin width that can manipulate the interpretation of histograms. Still, an issue with density plots is they are not suitable for small datasets and may smooth out important features. 

Boxplots summarize the data based on the min, first quartile, median, third quartile, and max. They can also show outliers. They are useful in comparing the median and spread of data and help combat skew. However, they don't show the underlying distribution as clearly as histograms and density plots. 

For this example, I found the density plot to be the most helpful. It illustrated how the peak weight varied depending on general health, and compared population proportion differences between men and women clearly. It is easy to see the proportion of the population in each general health category and the variance within their weight.  

:::

## Exercise 5

Using the `cdc` dataset, construct this plot in **two** ways. Once using `geom_bar()` and once using the `geom_col()`. May need to do some data wrangling for one of these.

::: {.callout-tip icon="false"}
## Solution

```{r}
#| label: ex-5-plot1
ggplot(cdc, aes(genhlth)) +
  geom_bar() +
  labs(
    x="General Health",
    y = "Count"
  )

```

```{r}
#| label: ex-5-plot2

#need to summarize the data to get counts for each category
summarized_cdc <- cdc %>%
  group_by(genhlth) %>%
  summarise(value = n())

ggplot(summarized_cdc, aes(genhlth, value)) +
  geom_col() +
  labs(
    x="General Health",
    y = "Count"
  )

```

:::
