---
title: "L06 Scales, Axes, & Legends"
subtitle: "Data Visualization (STAT 302)" 
author: "Lauren Kennedy"
pagetitle: "L06 Lauren Kennedy"

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
reference-location: margin
citation-location: margin 
---


## Overview

The goal of this lab is to explore ways to manage and manipulate scales, axes, and legends within `ggplot2`. 

## Datasets

We'll be using the `tech_stocks.rda`, `corruption.rda`, `cdc.txt`, and a toy dataset.

```{r}
#| label: load-pkgs-data
#| code-fold: false

# load package(s)
library(tidyverse)
library(ggrepel)
library(lubridate)

# load datasets
load("data/corruption.rda")
load("data/tech_stocks.rda")

# Read in the cdc dataset
cdc <- read_delim(file = "data/cdc.txt", delim = "|") |>
  mutate(
    genhlth = factor(
      genhlth,
      levels = c("excellent", "very good", "good", "fair", "poor")
      )
    )

# set seed
set.seed(86420)

# selecting a random subset of size 100
cdc_small <- cdc |> slice_sample(n = 100)

# Generating toy dataset for exercise 2
toy_data <- tibble(
  theta = seq(0, 2 * pi, length.out = 100),
  obs = rnorm(100, sin(theta), 0.1),
  larger_than = if_else(abs(obs) > abs(sin(theta)), "1", "0")
)
```

## Exercise 1

Using the `tech_stocks` dataset, recreate the following graphic as precisely as possible.

*Hints:*

- `key_glyph`
- `scales` package will be useful
- legend `linewidth` is 1.3
- legend useful values: 0.75 and 0.85
- Eliminated extra space in horizontal direction

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: Ex1Plot

tech_stocks %>%
  ggplot(aes(date, price_indexed, color = company)) +
  geom_line(key_glyph = "timeseries") +
  scale_y_continuous(
    name = NULL,
    position = "right",
    breaks = seq(0,600, 100),
    labels = scales::label_currency()
  ) +
  theme_minimal() +
  scale_x_date(
    name = NULL,
    expand = c(0,0)
  ) +
  scale_color_discrete(
    name = NULL,
    limits = c("Facebook", "Alphabet", "Microsoft", "Apple")
  ) +
  theme(
    legend.position = "inside",
    legend.position.inside = c(0.75, 0.85)
  ) +
  guides(color = guide_legend(override.aes = list(linewidth = 1.3))) +
  labs(title = "Stock price, indexed")


```

:::

## Exercise 2

Using the `corruption.rda` dataset, recreate the following graphic as precisely as possible.

*Hints:*
  
- Only use 2015 data
- Transparency is 0.6
- `"y ~ log(x)"`; method `"lm"`; and color is `grey40`
- Point size is 3 in legend
- color palette is `"Set1"`
- Package `ggrepel`
  - `box.padding` is 0.6
  - Minimum segment length is 0
  - seed is 9876

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: Ex2Plot

corruption_plot <- corruption %>%
  filter(year == 2015) %>%
  na.omit()

country_highlight <- c("United States", "Singapore", "Japan", "Chile", "Argentina", "China", "Ghana", "Iraq", "Niger")


label_info <- corruption_plot %>%
  filter(country %in% country_highlight)

ggplot(corruption_plot, aes(cpi, hdi)) +
  geom_point(aes(color = region), alpha = 0.6) +
  theme_minimal() +
  geom_smooth(method = "lm", formula = y ~ log(x), color = "grey40", se = FALSE) +
  geom_text_repel(data = label_info, aes(label = country), box.padding = 0.6,
                  min.segment.length = 0,
                  seed = 9876) +
  labs(
    x = "Corruption Perceptions Index, 2015 \n (100 = least corrupt)", 
    y = "Human Development Index, 2015 \n (1.0 = most developed)",
    title = "Corruption and human development (2015)", 
    color = NULL
    ) +
  theme(
    legend.position = "inside",
    legend.position.inside = c(1,0),
    legend.justification = c(1,0)
  ) +
  scale_color_brewer(palette = "Set1") +
  guides(color = guide_legend(override.aes = list(size = 3)))
  
  

```

:::
  
## Exercise 3

Use `toy_data` to recreate the following graphic as precisely as possible.

*Hints:*

- Point sizes are 3
- Point colors: `#E66100`, `#5D3A9B`
- Point transparency is 0.8
- `stat_function()` will be useful
  - line size is 1.3 and line color is `#56B4E9`
- `quote()` will be useful

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: Ex3Plot

ggplot(toy_data, aes(theta)) +
  geom_point(
    mapping = aes(y = obs, color = larger_than),
    size = 3, alpha = 0.8,
    show.legend = FALSE) +
  stat_function(fun = function(x) sin(x), color = "#56B4E9", size = 1.3) +
  theme_minimal() +
  scale_x_continuous(name = quote(theta)) +
  scale_y_continuous(name = quote(sin(theta))) + 
  scale_color_manual(values = c("#5D3A9B","#E66100"))

```

:::

## Exercise 4

Using `cdc_small`, construct a scatterplot of `weight` by `height` with the following requirements: 

- Size of plotting characters should be 3.
- Color and shape should both identify `genhlth`.
- Only one legend: for both color and shape.
- Legend title should be "General Health?" with a newline starting after general.
- Legend categories should be ordered from excellent (top) to poor (bottom) with each word in category capitalized in the legend.
- Legend should be placed in the lower right-hand corner of the plotting area. 
- Color should follow the `"Set1"` palette.
- Shape should have a solid triangle (17) for excellent, solid circle (19) for very good, an `x` (4) for poor, an hollow rotated square with an `x` in it (9) for fair, and a solid square (15) for good.
- `height` values should be limited between 55 and 80.
- `height` axis should display every 5th number between 55 and 80 and be appropriately labeled (i.e. `55 in`, `60 in`, ..., `80 in`). No axis title is necessary.
- `weight` values should be limited between 100 and 300. 
- `weight` axis should be `trans` to log base 10 scale, but still display weights in pounds starting at 100 and displaying every 25 pounds until 300. Must be appropriately labeled (i.e. `100 lbs`, `125 lbs`, ..., `300 lbs`). No axis title is necessary.
- Graph title should be `CDC BRFSS: Weight by Height`.
- Minimal theme.

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: Ex4Plot


ggplot(cdc_small, aes(x = height, y = weight, color = genhlth, shape = genhlth)) +
  geom_point(size = 3) +
  labs(
    color = "General \nHealth?", 
    shape = "General \nHealth?",
    x = NULL,
    y = NULL,
    title = "CDC BRFSS: Weight by Height"
  ) +
  scale_color_brewer(
    palette = "Set1",
    labels = c("Excellent", "Very Good", "Good", "Fair", "Poor")
  ) +
  scale_shape_manual(
    values = c("excellent" = 17,
               "very good" = 19,
               "good" = 15,
               "fair" = 9,
               "poor" = 4),
    labels = c("Excellent", "Very Good", "Good", "Fair", "Poor")) +
  scale_x_continuous(
    limits = c(55,80),
    breaks = seq(55,80, by = 5),
    labels = paste0(seq(55, 80, by = 5), " in")
  ) +
  scale_y_continuous(
    limits = c(100,300),
    trans = 'log10',
    breaks = seq(100,300, by = 25),
    labels = paste0(seq(100, 300, by = 25), " lbs")
  ) +
  theme_minimal() +
  theme(
  legend.position = "inside",
  legend.position.inside = c(1,0),
  legend.justification = c(1,0)
  ) 
    


```




:::
